# app/handlers/admin/stats_handlers.py
from aiogram import Router, F
from aiogram.types import Message, BufferedInputFile, InputMediaPhoto
from aiogram.filters import Command, CommandObject
from app.database import sessions
from app.handlers.admin.stats import (
    generate_category_pie_chart,
    generate_total_conversations_plot,
    generate_requests_histogram
)
from app.database import crud
import logging

router = Router()


async def is_admin(message: Message) -> bool:
    async with sessions.AsyncSessionLocal() as db:
        user = await crud.get_or_create_user(db, message.from_user.id)
        return user.is_admin


@router.message(Command("stats_categories"))
async def categories_stats_handler(message: Message, command: CommandObject):
    if not await is_admin(message):
        return await message.answer("‚õî –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞")

    # –ü–∞—Ä—Å–∏–º –ø–µ—Ä–∏–æ–¥ –∏–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥—ã
    period = 7
    if command.args and command.args.isdigit():
        period = int(command.args)
        if period < 1 or period > 365:
            return await message.answer("‚ùå –ü–µ—Ä–∏–æ–¥ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç 1 –¥–æ 365 –¥–Ω–µ–π")

    async with sessions.AsyncSessionLocal() as db:
        try:
            # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –≥—Ä–∞—Ñ–∏–∫
            chart_buffer = await generate_category_pie_chart(db, period)

            # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç —Ñ–∞–π–ª–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
            chart_file = BufferedInputFile(
                chart_buffer.getvalue(),
                filename=f"categories_{period}d.png"
            )

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            await message.answer_photo(
                chart_file,
                caption=f"üìä –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –¥–∏–∞–ª–æ–≥–æ–≤ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º –∑–∞ {period} –¥–Ω–µ–π"
            )
        except Exception as e:
            await message.answer(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–∞: {str(e)}")


@router.message(Command("stats_total"))
async def total_stats_handler(message: Message, command: CommandObject):
    if not await is_admin(message):
        return await message.answer("‚õî –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞")

    period = 7
    if command.args and command.args.isdigit():
        period = int(command.args)
        if period < 1 or period > 365:
            return await message.answer("‚ùå –ü–µ—Ä–∏–æ–¥ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç 1 –¥–æ 365 –¥–Ω–µ–π")

    async with sessions.AsyncSessionLocal() as db:
        try:
            # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –≥—Ä–∞—Ñ–∏–∫
            chart_buffer = await generate_total_conversations_plot(db, period)

            chart_file = BufferedInputFile(
                chart_buffer.getvalue(),
                filename=f"total_{period}d.png"
            )

            await message.answer_photo(
                chart_file,
                caption=f"üìà –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –¥–∏–∞–ª–æ–≥–æ–≤ –∑–∞ {period} –¥–Ω–µ–π"
            )
        except Exception as e:
            await message.answer(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–∞: {str(e)}")


@router.message(Command("stats_full"))
async def full_stats_handler(message: Message):
    if not await is_admin(message):
        return await message.answer("‚õî –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞")

    async with sessions.AsyncSessionLocal() as db:
        try:
            # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ–±–∞ –≥—Ä–∞—Ñ–∏–∫–∞
            pie_buffer = await generate_category_pie_chart(db)
            total_buffer = await generate_total_conversations_plot(db)

            # –û–±–æ—Ä–∞—á–∏–≤–∞–µ–º —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ BufferedInputFile
            pie_file = BufferedInputFile(
                pie_buffer.getvalue(),
                filename="categories.png"
            )
            total_file = BufferedInputFile(
                total_buffer.getvalue(),
                filename="total.png"
            )

            media = [
                InputMediaPhoto(
                    media=pie_file,
                    caption="üìä –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º"
                ),
                InputMediaPhoto(
                    media=total_file,
                    caption="üìà –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"
                )
            ]

            await message.answer_media_group(media)
        except Exception as e:
            await message.answer(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–æ–≤: {str(e)}")


@router.message(Command("stats_requests"))
async def requests_stats_handler(message: Message, command: CommandObject):
    if not await is_admin(message):
        return await message.answer("‚õî –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞")

    period = 7
    if command.args and command.args.isdigit():
        period = int(command.args)
        if period < 1 or period > 60:
            return await message.answer("‚ùå –ü–µ—Ä–∏–æ–¥ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç 1 –¥–æ 60 –¥–Ω–µ–π")

    async with sessions.AsyncSessionLocal() as db:
        try:
            chart_buffer = await generate_requests_histogram(db, period)

            chart_file = BufferedInputFile(
                chart_buffer.getvalue(),
                filename=f"requests_{period}d.png"
            )

            await message.answer_photo(
                chart_file,
                caption=f"üìÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞–ø—Ä–æ—Å–æ–≤ –ø–æ –¥–Ω—è–º –∑–∞ {period} –¥–Ω–µ–π"
            )
        except Exception as e:
            await message.answer(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–∞: {str(e)}")
            logging.error(f"Requests stats error: {str(e)}", exc_info=True)


@router.message(Command("help"))
async def help_handler(message: Message):
    if await is_admin(message):
        help_text = (
            "üìä –ö–æ–º–∞–Ω–¥—ã —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤:\n"
            "/stats_categories [–¥–Ω–µ–π] - –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º\n"
            "/stats_total [–¥–Ω–µ–π] - –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–∏–∞–ª–æ–≥–æ–≤\n"
            "/stats_requests [–¥–Ω–µ–π] - –ó–∞–ø—Ä–æ—Å—ã –ø–æ –¥–Ω—è–º\n"
            "/stats_full - –ü–æ–ª–Ω—ã–π –æ—Ç—á–µ—Ç\n"
            "/add_admin <id> - –ù–∞–∑–Ω–∞—á–∏—Ç—å –∞–¥–º–∏–Ω–∞\n"
            "/remove_admin <id> - –£–¥–∞–ª–∏—Ç—å –∞–¥–º–∏–Ω–∞"
        )
        await message.answer(help_text)
